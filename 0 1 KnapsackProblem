import java.util.ArrayList;

public class Solution {
	public static int maxProfit(ArrayList<Integer> values, ArrayList<Integer> weights, int n, int w) {
		// Write your code here.
        
        //capacity == w;
        //dp[items][capacity]
        
        int[][] dp = new int[n + 1][w+1];
        
        //intialization
        //if(items == 0) theif cannot fill the bag
        for(int i = 0; i<=w; i++)
            dp[0][i] = 0;
        
        //if(items == 0) theif cannot pick any item
        for(int i = 0; i<=n; i++)
            dp[i][0] = 0;
        
        for(int i = 1; i<=n; i++){
            for(int j = 1; j<=w; j++){
                if(weights.get(i-1) > j)
                    dp[i][j] = dp[i-1][j];
                else
                    dp[i][j] = Math.max(dp[i-1][j] , values.get(i-1)+dp[i-1][j-weights.get(i-1)]);
            }
        }
        return dp[n][w];
	}
}
