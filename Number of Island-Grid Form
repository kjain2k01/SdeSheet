class Solution {
    public int numIslands(char[][] grid) {
        int no_of_islands = 0;
        for(int i = 0; i<grid.length; i++){
            for(int j = 0; j<grid[i].length; j++){
                if(grid[i][j] == '1'){
                    dfs(i, j, grid.length, grid[i].length, grid);
                    no_of_islands++;
            }
                
        }
    }
        return no_of_islands;
}
    static void dfs(int i, int j, int row, int col, char[][] grid)
    {
        if(i >= 0 && j >=0 && i < row && j < col && grid[i][j] == '1')
        {
            grid[i][j] = '0';
            
            dfs(i-1, j, row, col, grid);
            dfs(i+1, j, row, col, grid);
            dfs(i, j+1, row, col, grid);
            dfs(i, j-1, row, col, grid);
        }
    }
}
