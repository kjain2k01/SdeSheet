
class Pair{
    Node node;
    int hd;
    
    public Pair(Node node, int hd){
        this.node = node;
        this.hd = hd;
    }
}
class Solution
{
    static ArrayList<Integer> topView(Node root)
    {
        ArrayList<Integer> ans = new ArrayList<>();
        if(root == null)
            return ans;
        TreeMap<Integer,Integer> map = new TreeMap<>();
        
        Queue<Pair> q = new LinkedList<>();
        
        q.add(new Pair(root, 0));
        
        while(! q.isEmpty()){
            Pair pair = q.poll();
            
            Node node = pair.node;
            int hd = pair.hd;
            
            if(map.get(hd) == null){
                map.put(hd, node.data);
            }
            
            if(node.left != null)
                q.offer(new Pair(node.left, hd-1));
        
        if(node.right != null){
            q.offer(new Pair(node.right, hd+1));
        }
    }
    
    for(Map.Entry<Integer, Integer> entry : map.entrySet()){
        ans.add(entry.getValue());
    }
    return ans;
    }
}
