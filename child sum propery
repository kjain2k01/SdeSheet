/*************************************************************

    Following is the Binary Tree node structure

    class BinaryTreeNode < Integer > {
        int data;
        BinaryTreeNode < Integer > left;
        BinaryTreeNode < Integer > right;

    public BinaryTreeNode(int data) {
            this.data = data;
        }
    }

*************************************************************/

public class Solution {
    public static void changeTree(BinaryTreeNode < Integer > root) {
        // Write your code here.
        if(root == null)
            return ;
        
        if(root.left == null && root.right == null)
            return;
        
        solve(root);
    }
    
    static void solve(BinaryTreeNode<Integer> root){
        if(root == null)
            return;
        
        int childSum = 0;
        
        if(root.left != null)
            childSum += root.left.data;
        
        if(root.right != null)
            childSum += root.right.data;
        
        if(childSum < root.data)
        {
            if(root.left != null)
                root.left.data = root.data;
            
            if(root.right != null)
                root.right.data = root.data;
        }
        
        solve(root.left);
        solve(root.right);
        
        int parentSum = 0;
        
        if(root.left != null)
            parentSum += root.left.data;
        if(root.right != null)
            parentSum += root.right.data;
        if(root.left != null || root.right != null)
        root.data = parentSum;
    }
}
