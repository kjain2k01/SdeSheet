
class Solution {
    // Function to return Breadth First Traversal of given graph.
    public ArrayList<Integer> bfsOfGraph(int V, ArrayList<ArrayList<Integer>> adj) {
      ArrayList<Integer> bfs = new ArrayList<Integer>();
      boolean[] visited = new boolean[V+1];
      
      for(int i = 0; i<visited.length; i++)
                visited[i] = false;
      
     
      bfsTraversal(0, adj,visited, bfs);
    
      return bfs;
    }
    
    public static void bfsTraversal(int node, ArrayList<ArrayList<Integer>> adj, boolean[] visited,ArrayList<Integer> bfs){
        Queue<Integer> q = new LinkedList<>();
        q.offer(node);
        visited[node] = true;
        while(!q.isEmpty()){
            Integer newNode = q.poll();
            bfs.add(newNode);
            
            for(Integer it : adj.get(newNode)){
                if(visited[it] == false){
                    q.offer(it);
                    visited[it] = true;
                }
            }
            
        }
    }
}
