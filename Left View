
class Pair{
    Node root;
    int level;
    
    Pair(Node root, int level)
    {
        this.root = root;
        this.level = level;
    }
}
class Tree
{
    //Function to return list containing elements of left view of binary tree.
    ArrayList<Integer> leftView(Node root)
    {
      // Your code here
      ArrayList<Integer> ans = new ArrayList<>();
      if(root == null)
        return ans;
        
      Queue<Pair> q = new LinkedList<>();
      TreeMap<Integer, Integer> map = new TreeMap<>();
      q.offer(new Pair(root, 0));
      while(!q.isEmpty()){
          Pair pair = q.poll();
          Node node = pair.root;
          int level = pair.level;
          
          if(!map.containsKey(level))
                map.put(level, node.data);
          
          if(node.left != null)
                q.offer(new Pair(node.left, level+1));
        
            if(node.right != null)
                q.offer(new Pair(node.right, level+1));
      }
      
      for(Map.Entry<Integer, Integer> entry : map.entrySet())
                ans.add(entry.getValue());
                
        return ans;
    }
}
